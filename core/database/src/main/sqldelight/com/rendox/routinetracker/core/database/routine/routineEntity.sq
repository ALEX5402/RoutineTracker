import com.rendox.routinetracker.core.model.HistoricalStatus;
import com.rendox.routinetracker.core.model.RoutineType;
import kotlin.Boolean;
import kotlin.Int;
import kotlinx.datetime.LocalDate;

CREATE TABLE routineEntity (
    id INTEGER NOT NULL PRIMARY KEY,
    type TEXT AS RoutineType NOT NULL,
    name TEXT NOT NULL,
    startDate INTEGER AS LocalDate NOT NULL,
    backlogEnabled INTEGER AS Boolean NOT NULL,
    periodSeparation INTEGER AS Boolean NOT NULL,
    vacationStartDate INTEGER AS LocalDate,
    vacationEndDate INTEGER AS LocalDate
);

getRoutineById:
SELECT *
FROM routineEntity
WHERE id = :id;

insertRoutine:
INSERT INTO routineEntity
VALUES (?, ?, ?, ?, ?, ?, ?, ?);

CREATE TABLE completionHistory (
    id INTEGER NOT NULL PRIMARY KEY,
    routineId INTEGER NOT NULL,
    numberOfDateFromRoutineStart INTEGER AS Int NOT NULL,
    status TEXT AS HistoricalStatus,
    FOREIGN KEY(routineId) REFERENCES routineEntity(id)
);