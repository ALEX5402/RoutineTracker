import com.rendox.routinetracker.core.database.routine.model.ScheduleType;
import kotlin.Boolean;
import kotlin.Int;
import kotlinx.datetime.DayOfWeek;
import kotlinx.datetime.LocalDate;

CREATE TABLE scheduleEntity (
    id INTEGER NOT NULL PRIMARY KEY,
    type TEXT AS ScheduleType NOT NULL,
    startDate INTEGER AS LocalDate NOT NULL,
    endDate INTEGER AS LocalDate,
    backlogEnabled INTEGER AS Boolean NOT NULL,
    cancelDuenessIfDoneAhead INTEGER AS Boolean NOT NULL,
    vacationStartDate INTEGER AS LocalDate,
    vacationEndDate INTEGER AS LocalDate,
    startDayOfWeekInWeeklySchedule INTEGER AS DayOfWeek,
    startFromHabitStartInMonthlyAndAnnualSchedule INTEGER AS Boolean,
    includeLastDayOfMonthInMonthlySchedule INTEGER AS Boolean,
    periodicSeparationEnabledInPeriodicSchedule INTEGER AS Boolean,
    numOfDueDaysInByNumOfDueDaysSchedule INTEGER AS Int,
    numOfDueDaysInFirstPeriodInByNumOfDueDaysSchedule INTEGER AS Int,
    numOfDaysInPeriodicCustomSchedule INTEGER AS Int,
    FOREIGN KEY(id) REFERENCES habitEntity(id)
);

getScheduleById:
SELECT *
FROM scheduleEntity
WHERE id = ?;

insertSchedule:
INSERT INTO scheduleEntity
VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);

lastInsertRowId:
SELECT last_insert_rowid();