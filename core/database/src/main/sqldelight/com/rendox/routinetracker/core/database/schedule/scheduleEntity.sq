import com.rendox.routinetracker.core.database.model.ScheduleType;
import com.rendox.routinetracker.core.logic.time.AnnualDate;
import kotlin.Boolean;
import kotlin.Int;
import kotlinx.datetime.DayOfWeek;
import kotlinx.datetime.LocalDate;

CREATE TABLE scheduleEntity (
    id INTEGER NOT NULL PRIMARY KEY,
    type TEXT AS ScheduleType NOT NULL,
    numOfDaysInPeriodicSchedule INTEGER AS Int,
    startDayOfWeekInWeeklySchedule INTEGER AS DayOfWeek,
    includeLastDayOfMonthInMonthlySchedule INTEGER AS Boolean,
    startFromRoutineStartInMonthlySchedule INTEGER AS Boolean,
    startDayOfYearInAnnualSchedule INTEGER AS AnnualDate,
    scheduleDeviation INTEGER AS Int NOT NULL,
    startDate INTEGER AS LocalDate NOT NULL,
    vacationStartDate INTEGER AS LocalDate,
    vacationEndDate INTEGER AS LocalDate,
    backlogEnabled INTEGER AS Boolean NOT NULL,
    cancelDuenessIfDoneAhead INTEGER AS Boolean NOT NULL,
    FOREIGN KEY(id) REFERENCES routineEntity(id)
);

getScheduleById:
SELECT *
FROM scheduleEntity
WHERE id = ?;

insertSchedule:
INSERT INTO scheduleEntity
VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);

lastInsertRowId:
SELECT last_insert_rowid();