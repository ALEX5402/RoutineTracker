import com.rendox.routinetracker.core.model.HistoricalStatus;
import kotlinx.datetime.LocalDate;

CREATE TABLE completionHistoryEntity (
    id INTEGER NOT NULL PRIMARY KEY,
    routineId INTEGER NOT NULL,
    date INTEGER AS LocalDate NOT NULL,
    status TEXT AS HistoricalStatus NOT NULL,
    FOREIGN KEY(routineId) REFERENCES routineEntity(id)
);

getHistoryEntriesByIndices:
SELECT *
FROM completionHistoryEntity
WHERE routineId = :routineId
    AND date BETWEEN :start AND :end
ORDER BY
        date ASC;

insertHistoryEntry:
INSERT INTO completionHistoryEntity
VALUES (?, ?, ?, ?);

updateHistoryEntryStatusByDate:
UPDATE completionHistoryEntity
SET status = ?
WHERE routineId = ? AND date = ?;

updateLastHistoryEntryStatusByStatus:
UPDATE completionHistoryEntity
SET status = :newStatus
WHERE id = (
    SELECT id
    FROM completionHistoryEntity
    WHERE routineId = :routineId AND status IN :statusPredicate
    ORDER BY date DESC
    LIMIT 1
);

getLastHistoryEntryDate:
SELECT date
FROM completionHistoryEntity
WHERE routineId = ?
ORDER BY date DESC
LIMIT 1;
